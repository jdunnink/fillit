
fillit project -- jdunnink / lravier

Fillit is a project that let you discover and/or familiarize yourself with a recurring
problematic in programming: searching the optimal solution among a huge set of possibilities, in a respectable timing. In this particular project, you will have to find a way to
assemble a given Tetriminos set altogether in the smallest possible square.

Your project must be written in C and must respect the Norme coding standard.

    • The allowed functions are : exit, open, close, write, read, malloc and free.

    • Your Makefile must compile your code without relinks.

    • It must contain the following rules : all, clean ,fclean and re.

    • You must compile your binary with the Wall, Wextra and Werror flags. Any other
        flag are forbidden , especially those for optimising purposes.

    • The binary

Your executable must take only one parameter, a file which contains a list of Tetriminos
to assemble. This file has a very specific format : every Tetrimino must exactly fit in a
4 by 4 chars square and all Tetrimino are separated by an newline each.

If the number of parameters sent to your executable is not 1, your program must display
its usage and exit properly. If you don’t know what a usage is, execute the command
cp without arguments in your Shell. It will give you an idea. Your file should contain
between 1 and 26 Tetriminos.

The description of a Tetriminos must respect the following rules :

    • Precisely 4 lines of 4 characters, each followed by a new line (well... a 4x4 square).

    • A Tetrimino is a classic piece of Tetris composed of 4 blocks.

    • Each character must be either a block character(’#’ ) or an empty character (’.’).
    • Each block of a Tetrimino must touch at least one other block on any of his 4 sides
        (up, down, left and right).

A few examples of valid descriptions of Tetriminos:

    .... .... #### .... .##. .... .#.. .... ....
    ..## .... .... .... ..## .##. ###. ##.. .##.
    ..#. ..## .... ##.. .... ##.. .... #... ..#.
    ..#. ..## .... ##.. .... .... .... #... ..#.

A few examples of invalid descriptions of Tetriminos
    
    #### ...# ##... #. .... ..## #### ,,,, .HH.
    ...# ..#. ##... ## .... .... #### #### HH..
    .... .#.. .... #. .... .... #### ,,,, ....
    .... #... .... .... ##.. #### ,,,, ....

Because each Tetrimino fills only 4 of the 16 available boxes, it is possible to describe
the same Tetrimino in multiple ways. However, a rotated Tetrimino describes a different
Tetrimino from the original, in the case of this project. This means no rotation is possible
on a Tetrimino, when you will arrange it with the others.

Those Tetriminos are then perfectly equivalents on every aspect :

    ##.. .##. ..## .... .... ....
    #... .#.. ..#. ##.. .##. ..##
    #... .#.. ..#. #... .#.. ..#.
    .... .... .... #... .#.. ..#.

These 5 Tetriminos are, for their part, 5 distincts Tetriminos on every aspect :

    ##.. .### .... .... ....
    #... ...# ...# .... .##.
    #... .... ...# #... .##.
    .... .... ..## ###. ....

In some cases, this square should contains holes when some given pieces won’t fit in perfectly with others.
Even if they are embedded in a 4x4 square, each Tetrimino is defined by its minimal boundaries (their ’#’). The 12 remaining empty characters will be ignored for the
Tetriminos assemble process.

Tetriminos are ordered by they apparition order in the file. Among all the possible candidates for the smallest square,
Your program must display the smallest assembled square on the standard output.
To identify each Tetrimino in the square solution, you will assign a capital letter to each
Tetrimino, starting with ’A’ and increasing for each new Tetrimino.
If the file contains at least one error, your program must display error on the standard output followed by a newline and have to exit properly.

Because of the strictness of the moulinette, you must respect the same turn-in protocol
as the libft one. All your sources and headers must be in the same folder. You can have
two different folders, one for the libft and one for fillit.